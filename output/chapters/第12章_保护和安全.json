[
  {
    "一级标题": "第12章_保护和安全",
    "二级内容": [
      {
        "二级标题": "12.1_安全环境",
        "三级内容": [
          {
            "三级标题": "12.1.1 实现“安全环境”的主要目标和面临的威胁 实现“安全环境”的主要目标有三：数据机密性、数据完整性和系统可用性。相应的面 临着三方面的威胁：有人通过各种方式窃取系统中的机密信息使数据暴露；攻击者擅自修改 系统中所保存的数据以实现数据篡改；采用多种方法来扰乱系统，使之瘫痪而拒绝提供服务。",
            "正文": "1.数据机密性(datasecrecy) 数据机密性是指将机密的数据置于保密状态，仅允许被授权用户访问系统中的信息， 以避免数据暴露。更确切地说，系统必须保证用户的数据，仅供被授权用户阅读，而不允 许未经授权的用户阅读，以保证数据的保密性。 攻击者可能采用各种方式进入系统，以截取系统中的文件和数据，由此造成系统信息 的泄漏。其中较常用的一种是“假冒”(Masquerading)方式，亦即攻击者伪装成一个合法用 户，利用安全体制所允许的操作去读取文件中的数据。为防止假冒，系统在用户进入系统 前，必须对用户的身份进行验证。\n\n2.数据完整性（dataintegrity） 完整性是指对数据或资源的可信赖程度，包括数据的完整性（信息内容）和来源的完整 380  第十二章保护和安全 性（数据来源），通常用于表述防止不当或未经授权的修改。信息的来源可能会涉及信息的 准确性和可信性，以及人们对此信息的信任程度，因此这种可信性也是系统正确运行的关 键。此外，还必须能保持系统中数据的一致性。系统中的数据被篡改，较常用的一种是方 法是“修改”(Modification)。未经核准的用户不仅可能从系统中获取信息，而且还可能修 改文件中的信息，例如，攻击者可对文件中的数据进行修改、删除。威胁数据完整性另一 种更为恶毒的方法是“伪造”(Fabrication)。攻击者可能在计算机的某些文件中增加一些经 过精心编造的虚假信息。\n\n3.系统可用性（systemavailability） 可用性是指能保证计算机中的资源供授权用户随时访问，系统不会拒绝服务。更明确 地说，授权用户的正常请求能及时、正确、安全地得到服务或响应。而攻击者为了达到使 系统拒绝的目的，可能通过“修改”合法用户名字的方法，将他变为非法用户，使系统拒 绝向该合法用户提供服务。此外，拒绝服务还可能由硬件故障引起，如磁盘故障、电源掉 电等，也可能由软件故障引起。"
          },
          {
            "三级标题": "12.1.2 系统安全的特征 一← 系统安全问题所涉及的面较广，它不仅与系统中所用的硬、软件设备的安全性能有关， 而且也与构造系统时所采用的方法有关，还与管理和使用该系统的人员情况有关，这使系 统的安全问题变得非常复杂，主要表现为如下几个方面：",
            "正文": "1.多面性 在大型系统中通常存在着多个风险点，在这些风险点应从三方面采取措施加以防范：\n\n(1）物理安全：是指系统设备及相关设施应得到物理保护，使之免遭破坏或丢失；\n\n(2）逻辑安全：是指系统中信息资源的安全，它又包括数据机密性、数据完整性和系 统可用性三个方面；\n\n(3）安全管理：包括对系统各种安全管理的策略和机制。 这三个方面中任一方面出现问题，都可能引起安全事故。在本章中主要介绍系统的逻 辑安全。\n\n2.动态性\n\n(1）信息的时效性。例如在今天是十分紧要的信息，到明天可能就失去了作用，而同 时又产生了新的紧要信息。\n\n(2）攻击手段的不断翻新。随着科学技术的不断进步，有可能在今天还是多数攻击者 所采用的攻击手段，到明天便很少使用，而又出现了更难于发现的攻击手段。 由于系统安全的动态性，导致人们无法找到一种安全问题一劳永逸的解决方案。\n\n3.层次性 大型系统的安全问题是一个相当复杂的问题，因此必需采用系统工程的方法解决。为 了简化系统安全的复杂性，系统安全通常采用层次-模块化结构方法： 然后再将其中每一个安全主题功能模块分成若干个安全子功能模块，作为次高层； 381  计算机操作系统 此后再进一步将一个安全子功能模块分为若干安全孙功能模块，作为第三层； 其最低一层是一组最小可选择的安全功能模块，用多个层次的安全功能模块来覆盖整 个系统安全的各个方面。\n\n4.适度性 当前几乎所有的单位在实现系统安全工程时，都遵循了适度安全准则，即根据实际需 要提供适度的安全目标加以实现。这是因为：\n\n(1）由于系统安全的多面性，使对安全问题的全面覆盖基本上不可能实现；\n\n（2）实现全覆盖所需的成本也是难以令人接受的；\n\n(3）由于系统安全的动态性，即使当时实现了安全问题的全覆盖，随着计算机技术的 迅速发展，企业规模的不断扩大，必然很快就会出现新的问题。 因此在构建系统安全机制时，都遵循安全适度性原则。"
          },
          {
            "三级标题": "12.1.3 计算机安全的分类 为了能有效地以工业化方式构造可信任的安全产品，国际标准化组织采纳了由美、英 等国提出的“信息技术安全评价公共准则（CC)”作为国际标准。CC为相互独立的机构对相 应信息技术安全产品进行评价提供了可比性。",
            "正文": "1.CC的由来 对一个安全产品（系统)进行评估，是件十分复杂的事，需要有一个能被广泛接受的评 估标准。为此，1983年，美国国防部颁布了历史上第一个计算机安全评价标准。该标准共 包括20多个文件，每个文件都使用了彼此不同颜色的封面，统称为“彩虹系列”。其中最 核心的是“可信任计算机系统评价标准”（TCSEC)，由于它是橙色封皮，故简称为“橙皮 书”。1985年，美国国防部对TCSEC进行了修订。\n\n2.计算机安全的分类 四类。共分为D、C1、C2、B、B2、B和A1七个等级。 全等级D1。凡是无法达到另外三类标准要求的，都被归为D类。D系统只为文件和用户 提供安全保护，其最普通的形式是本地操作系统，即无密码保护的个人计算机系统，如早 期的MS-DOS，或者是一个完全没有保护的网络。\n\n(2）C级。C类分为两级：C和C2，是仅高于D类的安全类别，能够提供审慎的保护。 C级的系统组合了若干种安全控制，其可信任运算基础体制（TrustedComputingBase，TCB） 通过将用户和数据分离，以达到安全的目的。在C系统中，要求OS使用保护模式和用户 登录验证，赋予用户自主访问控制权，即允许用户指定其他用户对自己文件的使用权限。 所有的用户以同样的灵敏度来处理数据，即用户认为C系统中的所有文档都具有相同的机 密性，如大部分的UNIX版本属于C级。\n\n(3）C2级。C2级亦称为受控存取控制级，是在C级基础上，增加了一个个体层访问控 制，加强了可调的审慎控制。例如，可将对一个文件的访问控制权限指定到一个单一个体 的层次上，即充许把自主访问控制权限下放到个人用户级，即用户分别对各自的行为负责。 382  第十二章保护和安全\n\n（4）B级。B级可分为B1、B2和B3三级，具有C2级的全部安全属性，B类系统具有 强制性保护功能，即所有的用户都必须与安全等级相关联，否则无法进行任何存取操作。 例如，在B类系统中，可将安全标注分为四级：内部级、秘密级、机密级和绝密级，系统 为每个可控用户和对象（如文件)分别赋予一张某级别的安全标注，访问规程规定，处于低\n\n（5）B2级。B2级有B级的全部安全属性。B2级要求系统必须采用自上而下的结构化 设计方法，并能够对设计方法进行检验，能对可能存在的隐蔽信道进行安全分析。如只有 用户能够在可信任通信路径中进行初始化通信，B2级还为每个系统资源扩展了等级标签。 为每个物理设备规定了最小和最大安全等级。用这两个数据来强制执行强加在设备上的限制。\n\n（6）B3级。B3级包含了B2级的全部安全属性。在B级中必须包含有用户和组的访问控 制表ACL、足够的安全审计和灾难恢复能力。此外，系统中必须包含TCB，由它来控制用 户对文件的访问，使其免遭非授权用户的非法访问。如通过ACL，进行任何操作前，要求 用户进行身份验证；为每一个被命名的对象建立安全审计跟踪。\n\n（7）Ai级。Ai级是最高的安全级别，目前A类安全等级只包含Ai一个安全类别。Ai 类与B类相似，对系统的结构和策略不作特别要求。A系统要求具有强制存取控制和形 式化模型技术的应用，能证明模型是正确的，并需说明有关实现方法是与保护模型一致的。 另外还必需对隐蔽信道做形式上的分析。 必须指出的是，保障计算机系统的安全性涉及到许多方面，其中有工程问题、经济问 题、技术问题、管理问题，甚至涉及到国家的立法问题。但我们在此仅介绍用来保障计算 机系统安全的若干基本技术，包括用户验证技术、访问控制技术、数据加密技术以及病毒 的防范技术等。"
          }
        ]
      },
      {
        "二级标题": "12.2_数据加密技术",
        "三级内容": [
          {
            "三级标题": "12.2.1 数据加密原理 加密是一种密写科学，用于把系统中的数据（称为明文）转换为密文。使攻击者即使截 获到被加密的数据，也无法了解数据的内容，从而有效地保护了系统中信息的安全性。数 据加密技术包括：数据加密、数据解密、数字签名、签名识别以及数字证明等。本小节主 要介绍数据加密的原理。",
            "正文": "1.数据加密模型 早在几千年前，人类就已经有了通信保密的思想，并先后出现了易位法和置换法等加 密方法。但直至进入20世纪60年代，由于科学技术的发展，才使密码学的研究进入了一 个新的发展时期。计算机网络的发展，尤其是Intermnet广泛深入的应用，又推动了数据加密 383  计算机操作系统 技术的迅速发展。 一个数据加密模型如图12-1所示。它由四部 干扰 干扰 分组成：\n\n(1）明文。被加密的文本称为明文P。 加密 解密 明文P 文P 算法 算法\n\n(2）密文。加密后的文本称为密文Y。 Eke Dkd\n\n(3）加密(解密)算法E(D)。这是指用于实现从 明文（密文）到密文（明文）转换的公式、规则或程序。 加密钥匙Ke 解密钥匙Kd\n\n（4）密钥K。密钥是加密和解密算法中的关键 图12-1数据加密模型 参数。 加密过程可描述为：在发送端利用加密算法E和加密密钥Ke，对明文P进行加密，得 到密文Y=Eke(P)；密文Y被传送到接收端后，再进行解密。解密过程可描述为：接收端 利用解密算法D和解密密钥Kd，对密文Y进行解密，将密文恢复为明文P=Dka(Y)。在 密码学中把设计密码技术称为密码编码，把破译密码技术称为密码分析。密码编码和密码 分析合起来称为密码学。在加密系统中算法是相对稳定的。为了加密数据的安全性，应经 常改变密钥。\n\n2.基本加密方法 最基本的加密方法有两种：易位法和置换法，其它方法大多是基于这两种方法形成的。 1）易位法 易位法是按照一定的规则，重新安排明文中的比特或字符的顺序来形成密文，而字符 本身保持不变。按易位单位的不同，又可分成比特易位和字符易位两种。前者的实现方法 简单易行，并可用硬件实现，主要用于数字通信中；而字符易位法是利用密钥对明文进行 易位后形成密文，具体方法是：假定有一密钥MEGABUCK，其长度为8，则其明文是以8 个字符为一组写在密钥的下面，如图12-2所示。按密钥中字母在英文字母表中的顺序来确 定明文排列后的列号。如密钥中的A所对应的列号为1，B为2，C为3，E为4等。然后 再按照密钥所指示的列号，先读出第一列中的字符，读完第1列后，再读出第2列中的字 符，·...…，这样，即完成了将明文pleasetransfer··转换为密文AFLLSKSOSELAWAIA… 的加密过程。 ME G AB U CK 原文 51112 Please transfer one million dollars to my e P Swiss Bank account six two two ... 密文 AFLLSKSOSELAWAIA b k TOOSSCTCLNMOMANT ESILYNTWRNNTSOWD FAEDOBNO... b d 图12-2按字符易位加密算法 384  第十二章保护和安全 2）置换法 置换法是按照一定的规则，用一个字符去置换(替代)另一个字符来形成密文。最早由 朱叶斯·凯撒(Juliuscaeser)提出的算法非常简单，它是将字母a、b、c、“、X、y、z循环 右移三位后，即利用d置换a，用e置换b等。凯撒算法的推广是移动K位。单纯移动K 位的置换算法很容易被破译，比较好的置换算法是进行映像。 在对英文进行加密时，可将26个英文字母通过密钥QWERTYUIOPASDFGHJKLZX CVBNM，映像到另外26个特定字母中。例如，利用置换法和上面的密钥可将attack加密， 变为QZZQEA，见图12-3所示。这种密码系统被称为单字母置换。在该例中解密密钥是什 依此类推，由此即可得到该例中的解密密钥是：KXVMCNOPHQRSZYIJADLEGWBUFT。 abcdefghijklmnopqrstuywxyz 图12-326个字母的映像 这样的加密方法是否已足够安全呢？从表面上看好像非常安全，因为，字母与字母间 的置换存在着26！=4×10°种可能性。但由于自然语言有着一定的统计特性规律。例如， 在英语中，最常用的字母排序为e、t、o、a、n、i等。最常用的字母组合为：th、in、er、 re等。根据自然语言规律，这种密码还是很容易被破译的。"
          },
          {
            "三级标题": "12.2.2 对称加密算法与非对称加密算法",
            "正文": "1.对称加密算法 在对称加密算法中，在加密算法和解密算法之间存在着一定的相依关系，即加密和解 密算法往往使用相同的密钥；或者在知道了加密密钥Ke后，就很容易推导出解密密钥Kd。 最有代表性的对称加密算法是数据加密标准DES(DataEneryptionStandard)。ISO现在已将 DES作为数据加密标准。随着VLSI的发展，现在可利用VLSI芯片来实现DES算法，并 用它做成数据加密处理器DEP。 在DES中所使用的密钥长度为64位，它由两部分组成，一部分是实际密钥，占56位； 另一部分是8位奇偶校验码。DES属于分组加密算法，它将明文按64位一组分成若干个明 文组，每次利用56位密钥对64位的二进制明文数据进行加密，产生64位密文数据。\n\n2.非对称加密算法 非对称加密算法的加密密钥Ke和解密密钥Kd不同，而且难以从Ke推导出Kd来， 故而可将其中的一个密钥公开而成为公开密钥，故该算法也可称为公开密钥算法。每个用 户保存一对密钥，每个人的公开密钥都对外公开。假如某用户要与另一用户通信，他可用 公开密钥对数据进行加密，而收信者则用自已的私用密钥进行解密。这样就可以保证信息 不会外泄。公开密钥算法的特点如下：\n\n(1）设加密算法为E、加密密钥为Ke，可利用它们对明文P进行加密，得到Eke(P)密 文。设解密算法为D、解密密钥为Kd，可利用它们将密文恢复为明文，即 385  计算机操作系统 Dkd(Eke(P)) = P\n\n(2）要保证从Ke推出Kd是极为困难的，或者说，从Ke推出Kd实际上是不可能的。\n\n(3）在计算机上很容易产生成对的Ke和Kd。\n\n(4）加密和解密运算可以对调，即利用Dkd对明文进行加密形成密文，然后用Eke对密 文进行解密，即 EKe(Dkd(P))=P 对称加密算法和非对称加密算法各有优缺点，非对称加密算法要比对称加密算法处理 速度慢，但密钥管理简单，因而在当前新推出的许多新的安全协议中，都同时应用了这两 种加密技术。一种常用的方法是利用公开密钥技术传递对称密码，而用对称密钥技术来对 实际传输的数据进行加密和解密。"
          },
          {
            "三级标题": "12.2.3 数字签名和数字证明书",
            "正文": "1.数字签名 在金融和商业等系统中，许多业务都要求在单据上签名或加盖印章，以证实其真实性， 备日后查验。在利用计算机网络传送报文时，可将公开密钥法用于电子（数字）签名，来代 替传统的签名。而为使数字签名能代替传统的签名，必须满足下述三个条件：\n\n（1）接收者能够核实发送者对报文的签名。\n\n（2）发送者事后不能抵赖其对报文的签名。\n\n(3）接收者无法伪造对报文的签名。 现已有许多实现数字签名的方法，下面介绍两种。 1）简单数字签名 在这种数字签名方式中，发送者A可使用私用密钥Kda对明文P进行加密，形成Dkda(P) 后传送给接收者B。B可利用A的公开密钥Kea对Dkda(P)进行解密，得到Ekea(Dkda(P))=P， 如图12-4（a）所示。 Dkda(P)=Y Ekea(Dkaa(P))=P (a) D Kda Kea Dkda(P) Ekeb(Dkda(P)) (Dkda(P) b) E Kda Keb Kdb Kea 图12-4数字签名示意图 我们按照对数字签名的三点基本要求进行分析后可得知：\n\n(1）接收者能利用A的公开密钥Kea对Dkda(P)进行解密，这便证实了发送者对报文的 签名。\n\n(2）由于只有发送者A才能发送出Dkda(P)密文，故不容A进行抵赖。 386  第十二章保护和安全\n\n（3）由于B没有A所拥有的私用密钥，故B无法伪造对报文的签名。 由此可见，图12-4(a)所示的简单方法可以实现对传送的数据进行签名，但并不能达到 保密的目的，因为任何人都能接收Dkda(P)，且可用A的公开密钥Kea对Dkda(P)进行解密。 为使A所传送的数据只能为B所接收，必须采用保密数字签名。 2）保密数字签名 为了实现在发送者A和接收者B之间的保密数字签名，要求A和B都具有密钥，再 按照图12-4（b）所示的方法进行加密和解密：\n\n(1）发送者A可用自己的私用密钥Kda对明文P加密，得到密文Dkaa(P)。\n\n(2）A再用B的公开密钥Keb对Dkda(P)进行加密，得到Ekeb(Dkda(P))后送B。\n\n(3）B收到后，先用私用密钥Kdb进行解密，即Dkdb(Ekeb(Dkda(P)))=Dkda(P)。\n\n(4）B再用A的公开密钥Kea对Dkda(P)进行解密，得到Ekea(Dkda(P))=P。\n\n2.数字证明书（Certificate） 虽然可以利用公开密钥方法进行数字签名，但事实上又无法证明公开密钥的持有者是 合法的持有者。为此，必须有一个大家都信得过的认证机构CA(CertificationAuthority)，由 该机构为公开密钥发放一份公开密钥证明书，该公开密钥证明书又称为数字证明书，用于 学生的学生证。在ITU制订的X.509标准中，规定了数字证明书的内容应包括：用户名称、 发证机构名称、公开密钥、公开密钥的有效日期、证明书的编号以及发证者的签名。下面 通过一个具体的例子来说明数字证明书的申请、发放和使用过程。\n\n（1）用户A在使用数字证明书之前，应先向认证机构CA申请数字证明书，此时A应 提供身份证明和希望使用的公开密钥A。\n\n(2）CA在收到用户A发来的申请报告后，若决定接受其申请，便发给A一份数字证 明书，在证明书中包括公开密钥A和CA发证者的签名等信息，并对所有这些信息利用CA 的私用密钥进行加密（即CA进行数字签名）。\n\n（3）用户A在向用户B发送报文信息时，由A用私用密钥对报文加密（数字签名），并 连同已加密的数字证明书一起发送给B。 密钥B。CA收到用户B的申请后，可决定将公开密钥B发送给用户B。\n\n(5）用户B利用CA的公开密钥B对数字证明书加以解密，以确认该数字证明书确系 原件，并从数字证明书中获得公开密钥A，同时也确认该公开密钥A确系用户A的。\n\n(6）用户B再利用公开密钥A对用户A发来的加密报文进行解密，得到用户A发来的 报文的真实明文。"
          }
        ]
      },
      {
        "二级标题": "12.3_用户验证",
        "三级内容": [
          {
            "三级标题": "12.3.1 使用口令验证 一→ 法。但它又极易受到攻击，这便导致使用口令的验证方法不断地发展。",
            "正文": "1.口令 用户要上机时系统首先要求用户输入用户名。登录程序利用该名字去查找一张用户注 册表，若从中找到匹配的用户名后，再要求用户输入口令，如果输入的口令也与注册表中的 口令一致，系统便认为该用户是合法用户，允许该用户进入系统：否则将拒绝该用户登录。 口令由字母、数字和特殊符号混合组成，它可由系统自动生成，也可由用户自己选定。 系统所产生的口令往往不便于记忆，而用户自己规定的口令通常是很容易记忆的字母和数 字。例如生日、住址、电话号码等，但很容易被攻击者猜中。\n\n2.提高口令安全性的方法 攻击者可通过多种方式来获取用户登录名和口令，其中最常用的方式是直接猜出用户 所使用的口令。为提高口令的安全性，必须能防正攻击者猜出口令。为此，口令机制通常 应满足以下几点要求：\n\n（1）口令应适当长。口令太短很容易被攻击者猜中。例如一个由四位十进制数所组成的 口令，其搜索空间仅为10*，在利用一个专门的程序来破解时，平均只需5000次即可猜中 口令。假如每猜一次口令需花费0.1ms的时间，则平均每猜中一个口令仅需0.5s。如果采用 较长口令，如6位，则平均每猜中一个口令需要50秒时间。虽有很大改进，但还远远不够。\n\n(2）应采用多种字符。假如口令是由数字、小写英文字母、大写英文字母以及一些特 例如口令由7位ASCIL码组成，其搜索空间变为95＇，大约是7×10，此时要猜中口令平 均需要几十年，因此建议口令长度不少于7个字符。\n\n(3）自动断开连接。在口令机制中还应引入自动断开连接的功能，即只允许用户输入有 限次数的不正确口令。如果用户输入不正确口令的次数超过规定的次数，系统便自动断开与 该用户所在终端的连接。这种自动断开连接的功能又会给攻击者增加猜中口令所需的时间。\n\n（4）回送显示的安全性。在用户输入口令时不应将口令回送到屏幕上显示，以防止被 就近的人发现。在有的系统中只要看到非法登录名就禁止登录，这样攻击者就知道登录名 是错误的。而有的系统看到非法登录名后仍要求其输入口令，等输完口令才显示禁止登录 信息。这样攻击者只是知道登录名和口令的组合是错误的。 388  第十二章保护和安全\n\n(5）记录和报告。记录所有用户登录进入系统和退出系统的时间；与此同时，自然也 记录和报告了攻击者猜测口令的非法企图，以及所发生的与安全性有关的其它不轨行为， 这样便能及时发现有人在对系统的安全性进行攻击。\n\n3.一次性口令（OnetimePassword) 为了防止口令外泄，用户应当经常改变口令，一种极端的情况是采用一次性口令机制， 即口令被使用一次后就换另一个口令。在采用该机制时，用户必须给系统提供一张口令表， 其中记录有其使用的口令序列。系统为该表设置一指针，用于指示下次用户登录时所应使 用的口令。在每次登录时，登录程序将用户输入的口令与该指针所指示的口令比较，若相 同便允许用户进入系统，并将指针指向表中的下一个口令。这样，即使攻击者获得了用户 使用的口令（某一个口令)也无法进入系统。必须注意，用户所使用的口令表必须妥善保存。\n\n4.口令文件 通常在口令机制中都配置有一份口令文件，用于保存合法用户的口令和与用户的特权。 该文件的安全性至关重要，一旦攻击者访问了该文件，将使整个计算机系统无安全性可言。 保证口令文件安全性最有效的方法是利用加密技术，其中一个行之有效的方法是选择一个 函数来对口令进行加密。该函数f(x)具有这样的特性：在给定了x值后，很容易算出f(x)； 然而，如果给定了f(x)值，却不能算出x的值。利用f(x）函数去加密所有的口令，再将加密 后的口令存入口令文件中。当某用户输入一个口令时，系统利用函数f(x)对该口令进行编 码，然后将加密后的口令与存储在口令文件中的已加密的口令比较，若两者匹配便认为是 合法用户。而对攻击者而言，则即使能获取口令文件中的已加密的口令，也无法对它们进 行译码，因而不会影响到系统的安全性。图12-5示出了一种对加密口令进行验证的方法。 否 存入口令 f(x) 口令文件 超过规定 是 拒绝进入 次数？ 加密函数 否 用户输入口令 进行口令 f(x) 口令合法？ 比较 是 进入系统 图12-5对加密口令的验证方法 尽管对口令进行加密是一个很好的方法，但也不是绝对安全可靠，其主要威胁来自于 两个方面：①当攻击者已掌握了口令的解密密钥时，就可用它来破译口令。②可利用加 密程序来破译口令，如果运行加密程序的计算机速度足够快，则通常只要几个小时便可破 译口令。因此，人们还是应该妥善保管好已加密的口令文件。\n\n5.挑战一响应验证 在该方法中，由用户自己选择一个算法，算法可以很简单也可较复杂，如X，并将该 按所选算法对该数据进行平方运算，得到144，并用它作为口令。服务器再将所收到的口 389  计算机操作系统 令与自已计算(利用X算法)的结果进行比较，如相同便允许用户上机，否则拒绝用户登录。 。由于该方法所使用的口令不是一个固定数据，而是基于服务器随机产生的数再经过计算得 到的，因此令攻击难于猜测。如果再频繁地改变算法就更为安全。"
          },
          {
            "三级标题": "12.3.2 基于物理标志的验证技术 当前广泛利用人们所具有的某种物理标志（physicalidentification)来进行身份验证。最早 使用的物理标志可能要算金属钥匙，20世纪初广泛使用身份证、学生证等。到了80年代 我国便开始使用磁卡，90年代又流行使用IC卡。",
            "正文": "1.基于磁卡的验证技术 目前广泛使用的银行现金卡、公交卡等，都普遍采用磁卡。这是一块其大小和名片相 仿的塑料卡，在其上贴有含若干条磁道的磁条。一般在磁条上有三条磁道，每条磁道可用 来记录不同数量的数据。如果在磁条上记录了用户名、用户密码、账号和金额，这就是银 行卡；而如果在磁条上记录的是有关用户的信息，该卡便可作为识别用户身份的物理标志。 在磁卡上所存储的信息可利用磁卡读写器读出。只要将磁卡插入或划过磁卡读写器， 便可将存储在磁卡中的数据读出，并传送到相应的计算机中。再由用户识别程序利用读出 的信息去查找一张用户信息表，若找到匹配的表目，便认为该用户是合法用户；否则为非 法用户。为了保证持卡者是该卡的主人，在基于磁卡验证的基础上，又增设了口令机制， 每当进行用户身份验证时，都要求用户输入口令。\n\n2.基于IC卡的验证技术 在外观上IC卡与磁卡并无明显差异，但在IC卡中可装入CPU和存储器芯片，使该卡 具有一定的智能，故又称智能卡。IC卡中的CPU用于对内部数据的访问和与外部数据进 行交换，还可用加密算法对数据进行处理，这使IC卡比磁卡具有更强的防伪性和保密性， 因而IC卡正在逐步取代磁卡。根据卡中装入芯片的不同，可把IC卡分为以下三种类型：\n\n(1）存储器卡。在这种卡中只有一个E²PROM(可电擦、可编程只读存储器)芯片，而没 有微处理器芯片。它的智能主要依赖于终端，就像IC电话卡的功能是依赖于电话机一样。 由此可知此种智能卡不具有安全功能，故只能作为储值卡，用来存储少量金额的现金。常 见的这类智能卡有购物卡、电话卡，其只读存储器的容量一般为4～20KB。\n\n(2）微处理器卡。这种卡除具有E²PROM外，还增加了一个微处理器。只读存储器的 容量一般是数十至数百千字节；处理器的字长主要是8位的。在这种卡中已具有加密设施， 增强了IC卡的安全性，因此有着更为广泛的用途。\n\n(3）密码卡。在卡中增加了加密运算协处理器和RAM。它能支持非对称加密体制RSA， 密钥长度长达1024位，因而极大地增强了IC卡的安全性。在专门用于确保安全的智能卡 中，存储了一个用户专用密钥和数字证明书，可作为用户的数字身份证明。当前在Intermet 上所开展的电子交易中，已有不少密码卡是基于RSA的密码体制的。 将IC卡用于身份识别时可用不同的机制，假如我们使用的是挑战一响应验证机制，首 务器发来的随机数，并对所得之和进行平方运算，然后把中间的512位数字作为口令发给 服务器，服务器将收到的口令与自己计算的结果比较，由此便可知用户身份的真伪。 390"
          },
          {
            "三级标题": "12.3.3 生物识别验证技术 由于生物识别技术是利用人体具有的、不可模仿的、难于伪造的特定生物标志来进行 验证，因此具有很高的可靠性。最广泛使用的生物标志是人的指纹、脸形、声纹、眼纹等， 用于对用户身份进行识别。另外还可以利用行为来进行验证，如签字、按键力度等。目前 已经开发出指纹识别、脸形识别、声音识别、签字识别等多种生物识别设备。",
            "正文": "1.常用于身份识别的生理标志 被选用的生理标志应具有这样三个条件：①足够的可变性，系统可根据它来区别成千 上万的不同用户；②应保持稳定，不会经常发生变化；③不易被伪装。下面介绍几种常 用的生理标志。\n\n（1）指纹。指纹有着“物证之首”的美誉。在全球绝对不可能找到两个完全相同的指 纹，而且它的形状不会随时间而改变，因而利用指纹进行身份认证是万无一失的。又因为 它不会出现用户忘记携带或丢失等问题，使用起来也特别方便，准确又可靠。因此，指纹 验证很早就用于契约签证和侦查破案。以前是依靠专家进行指纹鉴别，随着计算机技术的 发展，现已成功地开发出指纹自动识别系统。所以指纹是具有广阔前景的一种识别技术。\n\n（2）眼纹。它与指纹一样，世界上也绝对不可能找到眼纹完全相同的两个人，因而利 用眼纹来进行身份认证同样非常可靠。利用眼纹的身份验证效果非常好，如果注册人数不 超过200万，其出错率为0，所需时间也仅为秒级。眼纹识别现已在重要部门中采用，目 前成本还比较高。\n\n（3）声音。人们在说话时所发出的声音都会不同，过去主要依据人听对方的声音来确 定身份，现在广泛利用计算技术根据声音来实现身份验证。其基本方法是把人的讲话先录 音后再进行分析，将其全部特征存储起来；把所存储的语音特征称为声纹，然后再利用这 些声纹制作成语音口令系统。该系统的出错率在百分之一到千分之一之间，制作成本很低。\n\n(4）人脸。基于人脸识别技术的最大的优点是非接触式的操作方法。可以在不被人们 感知的情况下进行身份验证。在2008年奥委会上，我国采用了人脸验证技术来对进入会场 的人进行验证。但人脸会随年龄、表情、光照、姿态的不同而有所改变，可见，人脸具有 “一人千面”的特点，这使该技术面临着多方面的挑战。\n\n2.生物识别系统的组成 1）对生物识别系统的要求 要设计出一个非常实用的生物识别系统必须满足三方面的要求：\n\n（1）性能需求。包括具有很强的抗欺骗和防伪造能力。\n\n(2）易于被用户接受。完成一次识别的时间短，应不超过1～2秒钟，出错率应足够低， 这随应用场合的不同要求有所不同。\n\n(3）成本合理。它包含系统本身的成本，运营期间所需的费用和系统维护的费用。 2）生物识别系统的组成 生物识别系统通常是由如下三部分组成的：\n\n(1）生物特征采集器。对生物特征进行采集，将它转换为数字代码，从中提取重要的 特征，再加上与该对象有关的信息，制作成用户特征样本，把它放入中心数据库中。 391  计算机操作系统\n\n(2）注册部分。系统中配置一张注册表，每个注册用户在表中都有一个记录，记录中 至少有两项，其中一项用于存放用户姓名，另一项用于存放用户特征样本。\n\n（3）识别部分。第一步是要求用户输入用户登录名；第二步是把用户的生物特征与用 户记录中的用户特征样本信息进行比较，若相同便允许用户登录，否则拒绝登录。\n\n3.指纹识别系统 20世纪80年代指纹自动识别系统虽已在许多国家使用，但体积较大。直至90年代中 期，随着VLSI的迅速发展，才使指纹识别系统小型化，使该技术进入了广泛应用的阶段。\n\n（1）指纹采集传感器。实现指纹采集的硬件是指纹传感器，它是指纹识别系统的重要 组成部分。对指纹采集传感器的主要要求是，成像质量好，防伪能力强，体积小，价格便 宜。指纹图像采集质量的好坏，将会直接影响到所形成的指纹图像的质量。目前市场上的 指纹采集传感器有多种类型。其中光学式和压感式指纹采集传感器应用较广。\n\n（2）指纹识别系统。随着微处理器和各种电子元器件成本的迅速下降，我国已开发出 芯片进行图像处理，并可将指纹的录入、指纹的匹配等处理功能全部集成在其大小还不到 半张名片的电路板上。指纹录入的数量可达数干至数方枚，而搜索数干枚指纹的时间还不 到一分钟。指纹识别系统已经在我国不少单位获得应用。"
          }
        ]
      },
      {
        "二级标题": "12.4_来自系统内部的攻击",
        "三级内容": [
          {
            "三级标题": "12.4.1 早期常采用的攻击方式 我们先介绍常用的内部攻击方式。在设计操作系统时必须了解这些攻击方式，并采取 必要的防范措施。",
            "正文": "(1）窃取尚未清除的有用信息。在许多OS中，在进程结束归还资源时，在有的资源中 可能还留存了非常有用的信息，但系统并未清除它们。攻击者为了窃取这些信息，会请求 调用许多内存页面和大量的磁盘空间或磁带，以读取其中的有用信息。\n\n(2）通过非法的系统调用搅乱系统。攻击者尝试利用非法系统调用，或者在合法的系 统调用中使用非法参数，还可能使用虽是合法、但不合理的参数来进行系统调用，以达到 搅乱系统的目的。\n\n(3）使系统自己封杀校验口令程序。通常每个用户要进入系统时，必须输入口令，攻 击者为了逃避校验口令，登录过程中他会按DEL或者BREAK键等。在这种情况下，有的 392  第十二章保护和安全 系统便会封杀掉校验口令的程序，即用户无需再输入口令便成功登录。\n\n（4）尝试许多在明文规定中不允许做的操作。为了保证系统的正常运行，在OS手册中 会告知用户，有哪些操作不允许用户去做。然而攻击者恰反其道而行之，专门去执行这些 不允许做的操作，企图破坏系统的正常运行。\n\n（5）在OS中增添陷阱门。攻击者通过软硬兼施的手段，要求某个系统程序员在OS中 陷阱门作详细介绍。 帮助查出某个用户的口令。在必要时攻击者还可通过贿赂的方法，来获取多个用户的口令。 一旦获得这些用户的口令后，便可用合法用户的身份进入系统。"
          },
          {
            "三级标题": "12.4.2 逻辑炸弹和陷阱门 近年来更流行利用恶意软件进行攻击的攻击方式。所谓恶意软件（malware)，是指攻击 者专门编制的一种程序，用来造成破坏。它们通常伪装成合法软件，或隐藏在合法软件中， 使人们难以发现。有些恶意软件还可以通过各种方式传播到其它计算机中。依据恶意软件 是否能独立运行可将它分为两类：",
            "正文": "（1）独立运行类：它可以通过OS调度执行。这类恶意软件有蠕虫、僵户等。\n\n(2）寄生类：它本身不能独立运行，经常是寄生在某个应用程序中。下面即将介绍的 逻辑炸弹、特洛伊木马、病毒等就属于寄生类恶意软件。\n\n1.逻辑炸弹（logicbomb) 1）逻辑炸弹实例 逻辑炸弹是较早出现的一种恶意软件，它最初出自于某公司的程序员，是为了应对他 口令，该程序就不会发作。但如果程序员在事前未被警告，就突然被解雇时，在第二天（或 第二周）由于得不到口令，逻辑炸弹就会引爆一执行一段带破坏性的程序，这段程序通常会 使正常运行的程序中断，随机删除文件，或破坏硬盘上的所有文件，甚至于引发系统崩溃。 2）逻辑炸弹爆炸的条件 每当所寄生的应用程序运行时，就会运行逻辑炸弹程序，它会检查所设置的爆炸条件是 否满足，如满足就引发爆炸；否则继续等待。触发逻辑炸弹爆炸的条件有很多，较常用的有：\n\n（1）时间触发，即规定在一年中或一个星期中的某个特定的日期爆炸；\n\n(2）事件触发，当所设置的事件发生时即引发爆炸，比如发现了所寻找的某些文件；\n\n(3）计数器触发，计数值达到所设置的值时都会引发爆炸。恶意软件是一种极具破坏 性的软件，但它不能进行自我复制，也不会感染其它程序。\n\n2.陷阱i门（trapdoor) 1）陷阱门的基本概念 通常，当程序员在开发一个程序时，都要通过一个验证过程。为了方便对程序的调试， 程序员希望获得特殊的权限，以避免必需的验证。陷阱门其实就是一段代码，是进入一个 程序的隐蔽入口点。有此陷阱门，程序员可以不经过安全检查即可对程序进行访问，也就 393  计算机操作系统 是说，程序员通过陷阱门可跳过正常的验证过程。长期以来，程序员一直利用陷阱门来调 试程序并未出现什么问题。但如果被怀有恶意的人用于未授权的访问，陷阱门便构成了对 系统安全的严重威胁。 2）陷阱门实例 我们通过一个简单的例子来说明陷阱门。正常的登录程序代码如图12-6(a)所示，该程 序最后两句的含意是，仅当输入的用户名和口令都正确时，才算用户登录成功。但如果我 们将该程序的最后一条语句稍作修改，得到如图12-6(b)所示的登录程序代码，此时最后两 句的含意已改变为：当输入的用户名和口令都正确时，或者使用登录名为“zzzzz”时，无 论用什么口令，都能成功登录上机。 while(TRUE) while(TRUE) printf(“login:”); printf(“login: ” ); get_string(name): get _string(name); disable_echoingO; disable_echoingO: printf( “password:”); printf( “password: \" ): get_string(password); get_string(password); enable_echoingO: enable_echoingO: v=check_validity(name, password): v=check_validity(name,password); if(v)break: if (vlstrcmp(name,“zzzzz”)=0 break; execute_shell(name); execute_shell(name); (a)正常的登录程序代码 (b)插入了陷阱门后的代码 图12-6陷阱门实例 通过使用陷阱门，极大地方便了程序员。程序员在调试多台计算机时，若按正常方法， 必须先在每台计算机上进行注册，然后再输入自已的用户名和口令。如果需要调试的机器 非常多，对程序员而言，显然是不方便的。因此，如果程序员将陷阱门放入到某公司生产 的所有计算机中，并随之一起交付给用户，那么，以后该程序员不用再进行注册，即可成 功登录到该公司生产的任一台机器上。"
          },
          {
            "三级标题": "12.4.3 特洛伊木马和登录欺骗",
            "正文": "1.特洛伊木马(trojanhorses)的基本概念 特洛伊木马是指一种恶意软件，它是一个嵌入到有用程序中的、隐蔽的、危害安全的 程序。当该程序执行时会引发隐蔽代码执行，产生难以预期的后果。由于特洛伊木马程序 可以继承它所依附的应用程序标识符、存取权限以及某些特权，因此它能在合法的情况下 执行非法操作，如修改、删除文件，或者将文件复制到某个指定的地方。又如特洛伊木马 程序可以改变所寄存文件的存取控制属性，若将属性由只读改为读/写，便可使那些未授权 用户对该文件进行读/写，即改写该文件。特洛伊木马本身是一个代理程序，它是在系统内 部进行间接攻击的一个典型例子，其宿主完全可以不在被攻击的系统中。为了避免被发现， 特洛伊木马对所寄生程序的正常运行不会产生明显的影响，因此用户很难发现它的存在。\n\n2.特洛伊木马实例 编写特洛伊木马程序的人，将其隐藏在一个新游戏程序中，并将该游戏程序送给某计 394  第十二章保护和安全 算机系统的系统操作员。操作员在玩新游戏程序时，前台确实是在玩游戏，但隐藏在后台 运行的特洛伊木马程序却将系统中的口令文件复制到该骇客的文件中。虽然口令文件是系 统中非常保密的文件，但操作员在游戏时是在高特权模式下运行的，特洛伊木马就继承了 系统操作员的高特权，因此它就能够访问口令文件。又如在文本编辑程序中隐蔽的特洛伊 木马，会把用户正在前台编辑的文件悄悄地复制到预先设定的某个地方，以便以后能访问它。 但并不会过分影响用户所进行的文本编辑工作，使用户很难发现自己的文件已被复制。\n\n3.登录欺骗（loginspoofing） 我们以UNIX系统为例来说明登录欺骗。攻击者为了进行登录欺骗，写了一个欺骗登 录程序，该程序同样会在屏幕显示Login：，用于欺骗其他用户进行登录。当有一用户输入 登录名后，欺骗登录程序也要求它输入口令。然后却把刚输入的登录名和口令写入一份事 先准备好的文件中，并发出信号以请求结束shell程序，于是欺骗登录程序退出登录，同时 也去触发真正的登录程序。在屏幕上又显示出“Login：”，此时真正的登录程序开始工作。 对用户而言，他自然以为是自已输入发生了错误，系统要求重新输入。在用户重新输入后 系统开始正常工作，因此用户认为一切正常。但用户的登录名和口令已被人窃取。窃取者 可用同样的方法收集到许多用户的登录名和口令。"
          },
          {
            "三级标题": "12.4.4 缓冲区溢出 由于C语言编译器存在着某些漏洞，如它对数组不进行边界检查。例如下面的代码是 不合法的，数组范围是1024，而所包含的数字却有12000个。然而在编译时却未对此检查， 攻击者可以利用此漏洞来进行攻击。 int i; char C[1024]; i=12000; c[i]=0; 上述错误会造成有10976个字节超出了数组C所定义的范围，由此可能导致难以预测 的后果。由图12-7(a)可以看到，主程序运行时它的局部变量是存放在堆栈中的。当系统调 用过程A，将返回地址放入堆栈后，便将控制权交于A。假定A的任务是请求获得文件的 路径名，为能存放文件路径名，系统为A分配一个固定大小的缓冲区B，如图12-7(b）所示。 虚拟地址空间 虚拟地址空间 虚拟地址空间 OxFFFF.. 主程序的 主程序的 主程序的 堆栈 局部变量 局部变量 局部变量 堆栈 返回地址 返回地址 指针 A的局部 A的局部 变量 变量 SP SP 缓冲区B 缓冲区B 程序 程序 程序 (a)最初情况 (b)调用A后的情况 (c)缓冲区溢出后的情况 图12-7缓冲区溢出前后的情况 395  计算机操作系统 超过1024个，就会发生缓冲区溢出，所溢出的部分将会覆盖图12-7（c)所示的灰色区域， 并有可能进一步将返回地址覆盖掉，由此产生一个随机地址。一旦发生这样的情况，程序 返回时将跳到随机地址继续执行，通常会在几条指令内引起崩溃。一种更为严重的情况是， 攻击者经过精心计算，将它所设计的恶意软件的起始地址覆盖在原来在栈中存放的返回地 址上，把恶意软件本身也推入栈中。这样当从A返回时，便会去执行恶意软件。 产生该漏洞的原因是，C语言缺乏对用户输入字符长度的检查。因此最基本的有效方 法是对源代码进行修改，增加一些以显式方式检查用户输入的所有字符串长度的代码，以 避免将超长的字符串存入到缓冲区中，该方法对用户是不方便的。还有一种非常有效的方 法是，修改处理溢出的子程序，对返回地址和将要执行的代码进行检查，如果它们同时都 在栈中，就发出一个程序异常信号，并中止该程序的运行。上述方法已在最新推出的某些 操作系统中采用。顺便说明，缓冲区溢出也被用做系统外部的攻击手段，如在下一节中将 介绍的蠕虫，就是利用了缓冲区溢出这一漏洞。 /12.5来自系统外部的攻击 近年来随着Intermet应用的迅速普及，来自系统外部的威胁亦日趋严重，使联网机器很 容易受到远在万里之外发起的攻击。常用的外部攻击方式是将一段带有破坏性的代码通过 网络传输到目标主机，在那里等待时机，时机一到便执行该段代码进行破坏。",
            "正文": ""
          },
          {
            "三级标题": "12.5.1 病毒、蠕虫和移动代码 当前最严重的外来威胁是病毒、蠕虫和移动代码等。其中尤其是病毒和蠕虫，天天都 在威胁着系统的安全，以致在广播、电视中，都不得不经常发布病毒和蠕虫的警告消息。",
            "正文": "1.病毒（viruses) 计算机病毒是一段程序，它能把自己附加在其它程序之中，并不断地自我复制，然后 去感染其它程序，它能由被感染的程序和系统传播出去。一般的病毒程序并不长，用C语 言编写的病毒程序通常不超过一页。称这段程序为病毒，是因为它非常像生物学上的病毒： 它能自我生成成千上万的与原始病毒相同的复制品，并将它们传播到各处。计算机病毒也 可在系统中复制出千千万万个与它自身一样的病毒，并把它传播到各个系统中去。\n\n2.蠕虫（worms) 蠕虫与病毒相似，也能进行自我复制，并可传染给其它程序，给系统带来有害的影响， 都属于恶意软件。但它与病毒有所区别，其一是：蠕虫本身是一个完整的程序，能作为一 个独立的进程运行，因而它不需要寄生在其它程序上。再者，蠕虫的传播性没有病毒的强。 网络蠕虫由两部分组成，即引导程序和蠕虫本身，这两部分是可以分开独立运行的。 为了能感染网络中的其它系统，需要借助于网络工具作为载体，如电子邮件功能。蠕虫可 396"
          }
        ]
      },
      {
        "二级标题": "12.5_来自系统外部的攻击",
        "三级内容": [
          {
            "三级标题": "12.5.1 病毒、蠕虫和移动代码 当前最严重的外来威胁是病毒、蠕虫和移动代码等。其中尤其是病毒和蠕虫，天天都 在威胁着系统的安全，以致在广播、电视中，都不得不经常发布病毒和蠕虫的警告消息。",
            "正文": "1.病毒（viruses) 计算机病毒是一段程序，它能把自己附加在其它程序之中，并不断地自我复制，然后 去感染其它程序，它能由被感染的程序和系统传播出去。一般的病毒程序并不长，用C语 言编写的病毒程序通常不超过一页。称这段程序为病毒，是因为它非常像生物学上的病毒： 它能自我生成成千上万的与原始病毒相同的复制品，并将它们传播到各处。计算机病毒也 可在系统中复制出千千万万个与它自身一样的病毒，并把它传播到各个系统中去。\n\n2.蠕虫（worms) 蠕虫与病毒相似，也能进行自我复制，并可传染给其它程序，给系统带来有害的影响， 都属于恶意软件。但它与病毒有所区别，其一是：蠕虫本身是一个完整的程序，能作为一 个独立的进程运行，因而它不需要寄生在其它程序上。再者，蠕虫的传播性没有病毒的强。 网络蠕虫由两部分组成，即引导程序和蠕虫本身，这两部分是可以分开独立运行的。 为了能感染网络中的其它系统，需要借助于网络工具作为载体，如电子邮件功能。蠕虫可 396  第十二章保护和安全 向网络中其它系统发送一份电子邮件，在附件中带上蠕虫引导程序的副本；又如远程登录 功能，蠕虫可作为一个用户到远程系统上登录，在此过程中便将蠕虫引导程序的副本从一 个系统复制到远程系统，蠕虫的新副本便在远程系统上运行。 当蠕虫引导程序的副本由源计算机进入被攻击的计算机中，并开始运行时，它会在源 计算机和被攻击的计算机之间建立连接，然后上载蠕虫本身，在蠕虫找到隐身处后，就开 始查看被攻击计算机上的路由表，以期再将引导程序副本通过电子邮件等方式传播到相连 接的另一台机器上，开始新一轮的感染。\n\n3.移动代码 1）移动代码简述 在因特网上，如果能在远程计算机上执行代码，便认为系统具有远程执行功能。如果 一个程序在运行时，能在不同机器之间来回迁移，那么该程序就被称为移动代码。在现在 的网页中，有越来越多的网页包含了小应用程序。当人们下载包含有小应用程序的网页时， 小应用程序也会一起进入自己的系统。这种能在计算机系统之间移动的小应用程序就是一 种移动代码。另外，为了适应电子商务的需要还出现了一种移动代码。移动代码是一段代 表用户的程序，用户利用它到指定计算机上去执行某任务，然后返回报告执行情况。 2）移动代码的安全运行 占用该进程的内存空间，并作为合法用户的一部分运行，拥有用户的访问权限。这样显然 不能保证系统安全。因为别有用心的人完全可以借助于移动代码的帮助进入到其它系统， 以合法用户的身份进行窃取和破坏。为此，必须采取相应措施来保证移动代码的安全运行。 3）防范移动代码的方法———沙盒法 沙盒法的基本思想是采用隔离方法。具体做法是把虚拟地址空间，分为若干个相同大 小的区域，每个区域称为一个沙盒。例如对于32位的地址空间，可将它分为512个沙盒， 每个大小为8MB。将不可信程序放入一个沙盒中运行，如果发现盒内程序要访问盒外的数 据，或者有跳转到盒外某个地址去运行的任何企图，系统将停止该程序的运行。 可采取类似于分页的方法来实现沙盒。把虚地址分为两部分(b，w)，其中w的位数表示 一个沙盒的大小，而b用于表示沙盒的编号。当把一个沙盒S(b，w)分配给某程序A后，由 A所生成的任何地址，都将检查其高位是否与b相同，若相同，则表示地址有效；否则说 明该地址已超出指定沙盒的范围，便立即终止它的运行。 4）防范移动代码的方法—解释法 解释法是对移动代码的运行采取解释执行方式。解释执行的好处是，每一条语句在执 行前都经解释器检查，特别是对移动代码所发出的系统调用进行检查。若移动代码是可信 的(来自本地硬盘)，就按正常情况进行处理；否则(如来自因特网)，就将它放入沙盒中来限 制它的运行。现在Web浏览器就是采用该方法。"
          },
          {
            "三级标题": "12.5.2 计算机病毒特征和类型 当前对计算机威胁最大的要算是病毒和蠕虫。由于它们有着相似的特性，我们在以后 就不再把它们分开介绍，都称之为病毒。 397  计算机操作系统",
            "正文": "1.计算机病毒的特征 计算机病毒与一般的程序相比，显现出以下四个明显的特征：\n\n(1）寄生性。早期病毒覆盖在正常程序上，这样程序将无法运行，病毒很快就会被用 户发现。现在大多数病毒都采用寄生方法，只是附着在正常程序上，在病毒发作时原来程 序仍能正常运行，以致用户不能及时发现。\n\n(2）传染性。为了能给系统带来更大的危害，病毒将不断地进行自我复制，以增加病 毒的数量。病毒的复制品被放置在其它文件中，这些文件便含有了该病毒的一个克隆，而 它也同样会再传染给其它的文件，如此不断地传染使病毒迅速蔓延开来。\n\n(3）隐蔽性。为了避免被系统管理员和用户发现，以及逃避反病毒软件的检测，病毒 的设计者通过多种手段来隐藏病毒，使病毒能在系统中长期生存。主要隐藏方法有：①伪 装成正常程序；②隐藏在正常程序中或程序不太去访问的地方；③病毒自身不断地改变 状态或产生成千上万种状态等。\n\n（4）破坏性。如前所述，病毒的破坏性可表现在占用系统空间和处理机时间，对系统 中文件造成破坏，使机器运行发生异常情况。\n\n2.计算机病毒的类型\n\n（1）文件型病毒。我们把寄生于文件中的病毒称为文件型病毒。病毒程序依附在可执 行文件的前面或后面，但要从文件的前端装入病毒，会涉及到文件头中的许多选项，有一 定难度，故大多数病毒是从程序的后面装入，再把文件头中的起始地址指向病毒的始端。 情况。当受感染的程序执行时，病毒将寻找其它可执行文件继续散播。病毒在感染其它文 件时，通常是有针对性的，有的病毒是针对com文件，或是针对exe文件等。 病毒 病毒 病毒 可执行 病毒 程序 可执行 可执行 程序 病毒 程序 病毒 起始地址 头 头 头 头 (a) (a) (a) (a) 图12-8病毒附加在文件中的情况\n\n(2）内存驻留病毒。这原本也是一种文件型病毒，但它一旦执行便占据内存驻留区，通常 选择在内存的上端或下端的中断变量位置中不会使用的部分。有的病毒为避免其所占据的内 存被其它程序覆盖，还会改变操作系统的RAM位图，给系统一个错觉，认为相应部分内存已 分配，便不再分配。为能使自己频繁执行，通常内存驻留病毒会把陷阱或中断向量的内容复 制到其它地方去，而把自己的地址放入其中，使中断或陷阱指向病毒程序的入口。\n\n(3）引导扇区病毒。病毒也会寄生于磁盘中，用于引导系统的引导区。当系统开机时 病毒便借助于引导过程进入系统。引导型病毒又可分为两种：①迁移型病毒，会把真正的 398  第十二章保护和安全 引导扇区复制到磁盘的安全区域，以便在完成操作后仍能正常引导操作系统；②替代型病 毒，会取消被入侵扇区的原有内容，而将磁盘必须用到的程序段和数据融入到病毒程序中。\n\n（4）宏病毒。许多软件都允许用户把一串命令写入宏文件，以便用户可以按一次键就 能执行多条命令。宏病毒便是利用软件所提供的宏功能，将病毒插入到带宏的doc文件或 dot文件。由于宏允许包含任何程序，因此也就可以做任何事情，这样宏病毒也就可以肆意 妄为，导致系统中的其它各部分被破坏等。\n\n(5）电子邮件病毒。第一个电子邮件病毒是嵌入在邮件附件中的Word宏病毒。只要接 收者打开邮件中的附件，Word宏病毒就会被激活，它将把自身发送给该用户邮件列表中的 每个人，然后进行某种破坏活动。后来出现的电子邮件病毒被直接嵌入到邮件中，只要接 收者打开含有该病毒的邮件，病毒就会被激活。由于电子邮件病毒是通过网络传播的，因 此使病毒的传播速度显著地加快。"
          },
          {
            "三级标题": "12.5.3 病毒的隐藏方式 一---← 病毒和反病毒技术是“李生兄弟”。为使病毒能长期生存，病毒设计者采取了多种隐藏 方式让病毒逃避检测。反病毒专家必须了解病毒的隐藏方式，才能更快地找到病毒。",
            "正文": "1.伪装 当病毒附加到正常文件后会使被感染文件发生变化，为了逃避检测，病毒将把自已伪 装起来，使被感染过的文件与原有文件一样。常见的伪装方式有两种：\n\n（1）通过压缩法伪装。当病毒被附加到某个文件上后，会使文件长度变长，因此人们 可通过文件长度的改变来发现病毒。病毒设计者为了伪装病毒，必然通过压缩技术使被感 染病毒的文件长度与原有文件的长度一致。在使用压缩方法时，在病毒程序中应包含压缩 程序和解压缩程序，如图12-9所示。 文件变长 病毒 原有长度 未使用 可执行 可执行 程序 程序 解压缩过程 压缩过程 被压缩的 可执行 程序 文件头 文件头 文件头 (b)被感染的程序 (c)已被压缩的被感染程序 (a)一段程序 图12-9病毒伪装示意图\n\n(2）通过修改日期或时间来伪装。被感染病毒的文件在文件的日期和时间上自然会有 399  计算机操作系统 所改变，因此，从反病毒的角度上，可通过检测文件的修改日期和时间有无变化，来确定 该文件是否感染上病毒；反之，病毒程序的设计者也会修改被感染病毒文件的日期和时间， 使之与原文件相同，以伪装病毒。\n\n2.隐藏 的隐藏方法有以下几种：\n\n（1）隐藏于目录和注册表空间。在OS的根目录区和注册表区通常会留有不小的剩余空 间，这些都是病毒隐藏的好地方。\n\n(2）隐藏于程序的页内零头里。一个程序段和数据段可被装入若干个页面中，通常在 最后一页会有页内零头，病毒就隐藏在这些零头中，当病毒占用多个零头时，可用指针将 它们链接起来。该隐藏方式不会改变被感染文件的长度。\n\n（3）更改用于磁盘分配的数据结构。病毒程序可为真正的引导记录扇区和病毒自身重 会被发现也不会被覆盖。\n\n(4）更改坏扇区列表。病毒程序把真正的引导记录扇区和病毒程序分配到磁盘的任意 空闲扇区，然后就把这些扇区作为坏扇区，相应地修改磁盘的坏扇区列表。这样也就可逃 避反病毒软件的检测。\n\n3.多形态 多形态病毒在进行病毒复制时采用了较为复杂的技术，使所产生的病毒在功能上是相 同的，但形态各异，病毒的形态少者数十种，多则成干上万，然后将这些病毒附加到其它 尚未感染的文件上。常用的产生多态病毒的方法有：\n\n（1）插入多余的指令。病毒程序可以在它所生成的病毒中随意地插入多条多余的指令， 或改变指令的执行顺序，使所复制的病毒程序发生变异。\n\n(2）对病毒程序进行加密。在病毒程序中设置一个变量引擎来生成一个随机的密钥， 用来加密病毒程序，随着每次加密时密钥的不同，使所生成的病毒形态各异。"
          },
          {
            "三级标题": "12.5.4 病毒的预防和检测 对于病毒最好的解决方法是预防，不让病毒侵入系统。但要完全做到这一点是困难的， 特别是对于连接到互联网上的系统几乎是不可能的。因此还需要非常有效的反病毒软件来 检测病毒，将它们消除。",
            "正文": "1.病毒的预防 用户可用哪些方法来预防病毒呢？下面列出若干方法和建议供参考。\n\n(1）对于重要的软件和数据，应当定期备份到外部存储介质上，这是确保数据不丢失 的最佳方法，当发现病毒后可用该备份来取代被感染的文件。\n\n(2）使用具有高安全性的OS，这样的OS具有许多安全保护措施来保障系统的安全， 使病毒不能感染到系统代码。\n\n(3）使用正版软件，应当知道，从网上Web站点下载软件的做法是十分冒险的，即使 是必须下载的，也要使用最新的防病毒软件，防范病毒的入侵。 400  第十二章保护和安全\n\n(4）购买性能优良的反病毒软件，按照规定要求使用，并定期升级。\n\n（5）对于来历不明的电子邮件不要轻易打开。\n\n(6）要定期检查硬盘及U盘，用反病毒软件来清除其中的病毒。\n\n2.基于病毒数据库的病毒检测方法 通过被感染文件的长度或者日期和时间的改变来发现病毒的方法在早期还可奏效，而 现在这种检测方法虽然很难再有效，但伪装病毒还是难于逃避基于病毒数据库的病毒检测 方法的检查，该方法描述如下：\n\n（1）建立病毒数据库。为了建立病毒数据库，首先应采集病毒的样本。为此，设计了 病毒数据库中所收集病毒样本的种类越多，用此方法去检测病毒的成功率也就越高。\n\n（2）扫描硬盘上的可执行文件。将反病毒软件安装到计算机后，便可对硬盘上的可执 行文件进行扫描检查，看是否有与病毒数据库中样本相同的病毒，若发现有便将它清除。 但这种用可执行文件与病毒数据库中的病毒样本严格匹配的方式进行检测，却可能会漏掉 其它多种形态的病毒。 解决的方法是采用模糊查询软件，即使病毒有所变化，只要变化不是太大（如不超过三个 字节），都可以将它们检测出来。但模糊查询方法不仅使查询速度减慢，而且还会导致病毒扩 大化，以致使人们会把某些正常程序也误认为是病毒。一个比较完善的方法是使扫描软件能\n\n3.完整性检测方法 完整性检测程序首先扫描硬盘，检查是否有病毒，当确信硬盘“干净”时，才正式工 作。这种方法首先计算每个文件的检查和，然后再计算目录中所有相关文件的检查和，将 所有检查和写入一个检查和文件中。在检测病毒时，完整性检测程序将重新计算所有文件 的检查和，并分别与原来文件的检查和进行比较，若不匹配，就表明该文件已被感染上病 查和文件中的正常值。为保证检查和文件中数据不被更改，应将检查和文件隐藏起来，更 好的方法是对检查和文件进行加密，而且把加密密钥直接做在芯片上。"
          }
        ]
      },
      {
        "二级标题": "12.6_可信系统(Trusted System)",
        "三级内容": [
          {
            "三级标题": "12.6.1 访问矩阵模型和信息流控制模型 一一一一一一 建立可信系统的最佳途径是保持系统的简单性。然而系统设计者认为，用户总是希望 401  计算机操作系统 系统具有强大的功能和优良的性能。这样，致使所设计出的OS存在许多安全隐患。有些 组织特别是军事部门，他们因为更重视系统的安全性，决心要建立一个可信系统，为此应 在OS核心中构建一个安全模型，模型要非常简单以确保模型的安全性。",
            "正文": "1.安全策略 对系统安全而言，安全策略是根据系统对安全的需求所定义的一组规则及相应的描述。 该规则决定了对系统中数据进行保护的规则和规定每一个用户权限的规则，如哪些数据只 允许系统管理员阅读和修改；又如哪些数据只允许财务部门人员访问等。安全机制是指用 于执行安全策略时所必须遵循的规定和方法。\n\n2.安全模型 安全模型用于精确描述系统的安全需求和策略。因此安全模型首先应当是精确的、同 时也应当是简单和容易理解的，而且不涉及安全功能的具体实现细节。安全模型能精确地 描述系统功能，这样就能帮助人们尽可能地堵住所有的安全漏洞。通常在OS设计时，系 统的功能描述用于指导系统功能的实现，而安全模型则指导与系统安全有关的功能实现。 现在已有几种安全模型，其中比较实用的是访问矩阵模型和信息流控制模型。\n\n3.访问矩阵模型 一个客体都拥有矩阵中的一列。客体可以是程序、文件或设备。矩阵中的交叉项用于表示 某主体对某客体的存取权限集。保护矩阵决定在任何域中的进程可以执行的操作，它是由 系统强制执行的，而不是被管理者授权的操作。在有的保护矩阵中，除了客体能拥有矩阵 中的一列之外，主体也可拥有矩阵中的一列，此时矩阵中的交叉项所表示的是，相应行的 主体与相应列的主体之间是否允许进行通信等事宜。在访问矩阵模型中，矩阵的交叉项内 容的改变便意味着主体的访问权限的改变，因此必须对访问矩阵加以保护。\n\n4.信息流控制（informationflowcontrol）模型 许多信息的泄密并非源于访问控制自身的问题，而是因为未对系统中的信息流动进行 限制。为此在一个完善的保护系统中，还增加了一个信息流控制模型。它是对访问矩阵模 型的补充，用于监管信息在系统中流通的有效路径，控制信息流从一个实体沿着安全途径 流向另一实体。最广泛使用的信息流控制模型是Bell-LaPadula模型，该模型主要用于军事 部门。在该模型中把信息分为四等：内部级(U)、秘密级(C)、机密级(S)和绝密级(TS)。而 不同的人也将根据其级别，规定只能访问不同密级的信息。如将军为绝密级，相应地，他 可以访问所有的文件；而校级军官为机密级，他能访问机密级和更低密级的文件：而尉级 军官为秘密级，被限定只能访问秘密级和更低的文件，而一般士兵则仅能访问内部级文件。 由此可以得出，上校可以看上尉和士兵的文件，但决不能看将军的文件。由于该模型具有 多个安全等级，所以称为多级安全模型。在该模型中对信息的流动做出如下两项规定：\n\n(1）不能上读。在密级k层中运行的进程，只能读相同或更低密级层中的对象。例如 允许将军阅读中尉拥有的文件，但不允许中尉阅读将军的文件，此规则称为简单安全规则。\n\n(2）不能下写。在密级k层中运行的进程，只能写相同或更高密级层中的对象。例如 允许中尉在将军的信箱中添加信息，但不允许将军在中尉的信箱中添加信息，这样就不至 于把更高密级的内容下泄。此规则称为*规则。 402  第十二章保护和安全 只要系统严格执行了这两条规则，就能确保信息安全地流动，而不会发生信息从较高 安全级泄露到较低安全级的安全问题。另外还规定，进程可以读写对象，但不能相互直接 通信。图12-10示出了Bell-LaPadula模型。 安全等级 4 进程 对象 ①读 ①-g BL 图12-10Bell-LaPadula模型 的虚线表示进程正在写对象，信息从进程流向对象。图中示出了进程B正在从文件1中读 取信息，向文件3中写入信息。由图还可看出，无论是带箭头的实线还是带箭头的虚线， 它们都是水平方向或向上，而不具有向下方向的。这就是说信息没有往下流动的路径，因 此处于较高层中的信息不可能流到较低的密级层次中去，这样就保证了模型的安全性。"
          },
          {
            "三级标题": "12.6.2 可信计算基TCB(TrustedComputingBase) 一→ 可信任系统的核心是可信计算基TCB，它包含了用于检查所有与安全有关问题的访问 监视器和存放许多与安全有关的信息的安全核心数据库等。只要可信计算基按规范化形式 工作，就不会出现与安全有关的问题。",
            "正文": "1.可信计算基的功能 的IO设备；在TCB中应配置OS最核心的功能，如进程创建、进程切换、内存映射以及 部分文件管理和设备管理功能。由于把它做得尽可能小，比较容易做正确性验证，因而TCB 软件自身是可信软件。在设计TCB时，应使其独立于OS的其余部分，在它和OS的其余 部分、计算机系统的其它部分之间提供安全接口。 在TCB中有一个十分重要的部分一—访问监视器，它要求所有与安全有关的问题都必 须集中在一处进行检查。为此，将访问监视器设置在内核空间的入口，使其成为进入内核 的唯一途经，所有与系统安全有关的访问都将通过它。访问监视器对这些请求进行检查， 只有合法请求系统才予以处理。而现在的大多数OS，为了提高效率和避免产生瓶颈，并不 采取这样的设计方法，这就是导致它们不很安全的重要原因。TCB结构如图12-11所示。 403  计算机操作系统 审核 记录文件 访问监视器 （策略） 主体 对象 安全核心数据库 主体：安全许可 对象：安全分类 图12-11可信任计算基TCB\n\n2.安全核心数据库 为了对用户的访问进行安全控制，在TCB中配置了一个安全核心数据库。在数据库内 放入许多与安全有关的信息。其中最主要的是如下两个控制模型：\n\n（1）访问控制模型，用于实现对用户访问文件的控制，其中列出了每个主体的访问权 限和每个对象的保护属性。\n\n(2）信息流控制模型，用于控制信息流从一个实体沿着安全的途经流向另一个实体。\n\n3.访问监视器 访问监视器是TCB中的一个重要组成部分，它基于主体和被访问对象的安全参数来控 制主体对该对象的访问，实现有效的安全接入控制。访问监视器与安全核心数据库相连接， 如图12-11所示。访问监视器可以利用安全核心数据库中存放的访问控制文件和信息流控 制文件对本次访问进行仲裁。访问监视器具有以下特性：\n\n（1）完全仲裁。对每一次访问都实施安全规则，保证对主存、磁盘和磁带中数据的每 一次访问，均须经由它们的控制。为了提高系统的速度，通常有一部分功能由硬件实现。\n\n(2）隔离。保证访问监视器和安全核心数据库的安全，任何攻击者都无法改变访问监 视器的逻辑结构以及安全核心数据库中的内容。\n\n(3）可证实性。访问监视器的正确性必须是可证明的，即在数学上可以证明访问监视 器执行了安全规定，并提供了完全仲裁和隔离。 如果一个系统能具有上述三个特性，就可认为该系统就是一个可信任系统。在图中还 有一个审计及记录文件，将所检测到的安全违规、安全核心数据库中的授权变化等重要安 全事件都记录到审计文件中。"
          },
          {
            "三级标题": "12.6.3 设计安全操作系统的原则 如何设计一个高安全性的OS，是当今人们面临的一种挑战。人们经过长期的努力，提 出了若干设计安全OS的原则。",
            "正文": "1.微内核原则 我们这里所说的微内核（通常将它们称为安全内核），与前面所说的微内核有着某些相 似之处，主要表现为：首先它们都非常小，易于保证它们的正确性；其次它们都采用了策 404  第十二章保护和安全 略与机制分离原则，即仅将机制部分放入安全内核中，而将策略部分放在内核的外面。它 们之间的差别主要表现在下面两方面：\n\n（1）它不仅提供OS最核心的功能，如进程切换、内存映射等功能，还是实现整个OS 安全机制的基础。使安全内核成为一个可信任计算基。\n\n（2）在通常的微内核中，进入微内核的入口有多个，而在安全系统中，系统的其它部 分与安全内核之间仅提供了唯一的安全接口。\n\n2.策略与机制分离原则 原则，以减小安全内核的大小和增加系统的灵活性。安全策略规定系统要达到的特定安全 目标是由设计者或管理员来确定的，应将它放在安全内核外部。机制是完成特定安全策略 的方法，由一组具体实现保护功能的软件或硬件实现，应将它放入安全内核中。\n\n3.安全入口原则 在通常的微内核中，都采用了C/S模式，微内核与所有的服务器之间都存在着接口， 因此可以通过多种途径进入微内核，这也就为保障OS的安全增加了困难。而在安全系统 中为确保安全内核的安全，在安全内核与其它部分之间，如与其它的硬件、系统和用户软 件等之间，只提供唯一的安全接口，凡是要进入安全内核进行访问者，都必须接受严格的 安全检查，任何逃避检查的企图都是不能得逞的。\n\n4.分离原则 可用多种方法来将一个用户进程与其他用户进程进行隔离，主要分离方法有：\n\n（1）物理分离。使各进程的活动基于不同的硬件设施。例如，在对安全性要求较高的 任务进行处理时，可用专用的计算机来完成；对安全性要求一般的任务，可在公用计算机 系统上来完成。\n\n(2）时间分离。让各进程在不同的时间运行。\n\n(3）密码分离。对用于加密的密钥和密文必须妥善分开保管。\n\n(4）逻辑分离。为确保安全内核的安全，安全内核应与其它部分的硬件和软件进行隔离。\n\n5.部分硬件实现原则 在安全内核中有一部分须用硬件实现，其原因可归结如下：\n\n(1）提高处理速度。为了不影响到系统的运行速度，应将对运行速度有严重影响的部 分采用硬件实现。\n\n(2）确保系统的安全性。用软件实现容易受到攻击和病毒的感染，如改用硬件实现就 会安全得多。 随着大规模集成电路的发展，其成本变得越来越低，用硬件实现不会给安全系统带来 太大的经济负担。\n\n6.分层设计原则 核，第三层是OS，最高层是用户。其中每一层又都可分为若干个层次。安全保护机制在满 足要求的情况下，应力求简单一致，并将它的一部分放入到系统的安全内核中，把整个安 405  计算机操作系统 全内核作为OS的底层，使其最接近硬件。 值得一提的是，如果一个系统的安全性没有按照上述的原则进行设计，必然会留下许 多隐患。而只是试图在原有操作系统基础上增加几个安全软件，或者增加一个安全管理层， 使之成为一个安全系统，几乎是不可能的。这也就是何以在目前的OS中，对所存在的安 全隐患虽经无数次的修改，其安全性能仍不能令人满意的原因。"
          }
        ]
      }
    ]
  }
]
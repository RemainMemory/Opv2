计算机操作系统态的进程为止，或者已无足够的内存来换入进程，此时对换进程才停止换入。
由于要交换一个进程需要很多的时间，因此，对于提高处理机的利用率而言，它并不是一个非常有效的解决方法。目前用得较多的对换方案是，在处理机正常运行时，并不启动对换程序。但如果发现有许多进程在运行时经常发生缺页且显现出内存紧张的情况，才启动对换程序，将一部分进程调至外存。如果发现所有进程的缺页率都已明显减少，而系统的吞吐量已下降时，则可暂停运行对换程序。
1/4.5分页存储管理方式大块空间，但须为之付出很大开销。如果充许将一个进程直接分散地装入到许多不相邻接的分区中，便可充分地利用内存空间，而无须再进行“紧凑”。基于这一思想而产生了离散分配方式。根据在离散分配时所分配地址空间的基本单位的不同，又可将离散分配分为以下三种：
(1）分页存储管理方式。在该方式中，将用户程序的地址空间分为若干个固定大小的区域，称为“页”或“页面”。典型的页面大小为1KB。相应地，也将内存空间分为若干个物理块或页框（frame)，页和块的大小相同。这样可将用户程序的任一页放入任一物理块中，实现了离散分配。
（2）分段存储管理方式。这是为了满足用户要求而形成的一种存储管理方式。它把用分配时，以段为单位，这些段在内存中可以不相邻接，所以也同样实现了离散分配。
(3）段页式存储管理方式。这是分页和分段两种存储管理方式相结合的产物。它同时具有两者的优点，是目前应用较厂泛的一种存储管理方式。
4.5.1分页存储管理的基本方法1.页面和物理块（1）页面。分页存储管理将进程的逻辑地址空间分成若干个页，并为各页加以编号，从0开始，如第0页、第1页等。相应地，也把内存的物理地址空间分成若干个块，同样也为它们加以编号，如0#块、1#块等等。在为进程分配内存时，以块为单位，将进程中的若干个页分别装入到多个可以不相邻接的物理块中。由于进程的最后一页经常装不满一块，而形成了不可利用的碎片，称之为“页内碎片”。
(2）页面大小。在分页系统中，若选择过小的页面大小，虽然一方面可以减小内存碎片，起到减少内存碎片总空间的作用，有利于内存利用率的提高，但另一方面却会造成每个进程占用较多的页面，从而导致进程的页表过长，占用大量内存。此外，还会降低页面换进换出的效率。然而，如果选择的页面过大，虽然可以减少页表的长度，提高页面换进换出的速度，但却又会使页内碎片增大。因此，页面的大小应选择适中，且页面大小应是2的幂，通常为1KB～8KB。
138第四章存储器管理2.地址结构分页地址中的地址结构如下：
3112 110位移量W页号P它包含两部分内容：前一部分为页号P，后一部分为位(偏)移量W，即页内地址。图中的地址长度为32位，其中0～11位为页内地址，即每页的大小为4KB；12～31位为页号，地址空间最多允许有1M页。
对某特定机器，其地址结构是一定的。若给定一个逻辑地址空间中的地址为A，页面的大小为L，则页号P和页内地址d可按下式求得：
[A]P =INTd=[A] MOD L[L其中，INT是整除函数，MOD是取余函数。例如，其系统的页面大小为1KB，设A=2170B，则由上式可以求得P=2，d=122。
3.页表仍然能够正确地运行，即能在内存中找到每个页面所对应的物理块，系统又为每个进程建立了一张页面映像表，简称页表。在进程地址空间内的所有页（0～n)，依次在页表中有一页表项，其中记录了相应页在内存中对应的物理块号，见图4-14的中间部分。在配置了页表后，进程执行时，通过查找该表，即可找到每页在内存中的物理块号。可见，页表的作用是实现从页号到物理块号的地址映射。
用户程序内存0页页号块号1页022页133页264页385页495n页10图4-14页表的作用即使在简单的分页系统中，也常在页表的表项中设置一存取控制字段，用于对该存储块中的内容加以保护。当存取控制字段仅有一位时，可用来规定该存储块中的内容是允许读/写还是只读；若存取控制字段为二位，则可规定为读/写、只读和只执行等存取方式。如果有一进程试图去写一个只允许读的存储块时，将引起操作系统的一次中断。如果要利用139